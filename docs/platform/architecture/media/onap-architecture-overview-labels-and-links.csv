LabelText;Href;HrefTarget;Title;Remark;ProjectState;OptionalInfo
ONAP Logo;https://docs.onap.org/en/latest/guides/overview/overview.html;Overview;The Open Network Automation Platform (ONAP) is a comprehensive platform for orchestration, management, and automation of network and edge computing services for network operators, cloud providers, and enterprises. The open source project ONAP is hosted by the Linux Foundation.;;na;
RELEASE 10 »JAKARTA«;https://docs.onap.org/en/latest/guides/overview/overview.html#onap-release-information;Overview;ONAP Release 10 »Jakarta« is not yet released.;;na;
ONAP Components (Border);https://docs.onap.org/en/latest/guides/onap-developer/architecture/index.html;Architecture;The ONAP architecture consists of functions for the design-time, run-time, for managing ONAP itself and additional utilities.;;na;
Northbound Interface (NBI) towards OSS, BSS and other;https://docs.onap.org/projects/onap-externalapi-nbi/en/latest/architecture/architecture.html#introduction;Component;The Northbound Interface (NBI) provides a set of API that can be used by external systems as OSS or BSS for example. These APIs are based on TMF API.;"Required in this map? Because we also show the ""External APIs"" block in the map?! ";na;
Design-Time;https://docs.onap.org/en/latest/guides/onap-developer/architecture/onap-architecture.html#design-time-framework;Architecture;The Design-time framework is a comprehensive development environment with tools, techniques and repositories for defining/describing resources, services, and products.;;na;
Service Design & Creation (SDC);https://docs.onap.org/projects/onap-sdc/en/latest/index.html;Component;Service Design & Creation (SDC) provides a well-structured organization of visual design and testing tools, templates and catalogs to model and create resources, and services. The output of the SDC is a set of models which drives the orchestration. In addition, it provides process workflow support for talking to the VNF/PNF or other resources and services through the process steps design, test and deploy.;Map update required? The elements below are a mix of tasks and ABB?! ;maintained;
Service/xNF Design;https://docs.onap.org/en/latest/guides/onap-user/design/index.html;GuideUser;The goal of the design process is to create all artifacts (models) that are required to instantiate and manage resources, services, and products on the ONAP platform.;;na;https://docs.onap.org/projects/onap-vnfrqts-requirements/en/latest/Chapter7/VNF-On-boarding-and-package-management.html
xNF Onboarding;https://docs.onap.org/projects/onap-vnfrqts-requirements/en/latest/Chapter7/VNF-On-boarding-and-package-management.html;VnfRequirements;The VNF provider must provide VNF packages that include a rich set of recipes, management and functional interfaces, policies, configuration parameters, and infrastructure requirements that can be utilized by the ONAP Design module to onboard and catalog these resources.;;na;
Workflow Designer;https://docs.onap.org/projects/onap-sdc/en/latest/workflow.html;Component;Workflow Designer allows a user to design a workflow, save it, and attach it to a SDC service as an artifact. Workflow Designer also manages the definitions of activities, which can be later used as parts of the designed workflows.;;na;
Controller Design Studio (CDS);https://docs.onap.org/projects/onap-ccsdk-cds/en/latest/index.html;Component;The design-time part of the Controller Design Studio (CDS) – the CDS Designer UI – is a framework to automate the resolution of resources for instantiation and any config provisioning operation, such as day0, day1, or day2 configuration. A designer can define what actions are required for a given service, along with anything comprising the action. Its content is driven from a catalog of reusable data dictionary and component, delivering a reusable and simplified self-service experience. CDS modeling is mainly based on the TOSCA standard, using JSON as a representation. CDS is part of CCSDK.;;maintained;
DCAE Design Studio;https://docs.onap.org/projects/onap-dcaegen2/en/latest/sections/design-components/DCAE-MOD/DCAE-MOD-Architecture.html;Component;Data Collection, Analytics and Events (DCAE) Design Studio enables to define and configure the monitoring flows of DCAE.;"Revise description? Rename ABB to ""DCAE MOD""?";maintained;"Data Collection, Analytics and Events (DCAE) Microservice Onboarding & Design (MOD)
Support automated adaptation of ML model from Acumos to DCAE design & runtime environment.
Provide simplified mS Onboarding, Service Assurance flow design, & mS configurations in DCAE.
Auto-generate blueprint at the end of the design process, not onboarded before the design process.
Support Policy onboarding & artifact distribution to Policy/CLAMP to support Self Service Control Loop.
Integrate with ONAP User Experience portals (initially ONAP portal, later SDC portal)."
Catalog;https://docs.onap.org/projects/onap-sdc/en/latest/architecture.html;Component;The key output of SDC is a set of models containing descriptions of asset capabilities and instructions to manage them. These models are stored in the SDC Master Reference Catalog for the entire enterprise to use.;Description of the SDC Catalog is missing in RTD. Link is rerouted to DevWiki / ARC Review.;na;
VNF Validation;https://docs.onap.org/en/latest/guides/onap-provider/index.html#vnf-and-pnf-requirements-and-guidelines;GuideProvider;Ensures that a network function (e.g. CNF, PNF, VNF) fits all ONAP guidelines and requirements.;;na;
VVP;https://docs.onap.org/projects/onap-vvp-documentation/en/latest/index.html;Component;The VNF Validation Platform (VVP) provides the functionality to validate that a VNF Heat package is compliant with the ONAP VNF Heat Template Requirements from the ONAP VNF Requirements (VNFRQTS) project.;;maintained;
VNF SDK;https://docs.onap.org/projects/onap-vnfsdk-model/en/latest/index.html;Component;The Virtual Network Function Software Development Kit (VNF SDK) provides the functionality to create VNF and PNF packages, test VNF and VNF ONAP compliance, and provides market place functionality to store VNF and PNF packages.;;maintained;
Run-Time;https://docs.onap.org/en/latest/guides/onap-developer/architecture/onap-architecture.html#runtime-framework;Architecture;The Run-time execution framework executes the rules and policies and other models distributed by the design and creation environment.;;na;
Interfaces;https://docs.onap.org/en/latest/guides/onap-developer/architecture/references.html#user-interfaces;Architecture;Various ONAP components provide also a user interface.;;na;
Portal;https://docs.onap.org/projects/onap-portal/en/guilin/index.html;Component;Portal is a GUI platform that provides the ability to integrate different ONAP components GUIs into an centralized portal.;"Links to ""Guilin"" (latest available version)";unmaintained;
O&M Dashboard (VID);https://docs.onap.org/projects/onap-vid/en/latest/index.html;Component;Virtual Infrastructure Deployment (VID) is a UI interface that allows the operations and network infrastructure engineers to orchestrate and change configurations related to the infrastructure expansion and maintenance.;;unmaintained;
Use-Case UI (UUI);https://docs.onap.org/projects/onap-usecase-ui/en/latest/index.html;Component;Usecase User Interface (UUI) is an application portal which provides the ability to manage ONAP service instances. It allows customers to create, delete and update service instances, as well as to monitor the alarms and performance of these instances.;;maintained;
External APIs;https://docs.onap.org/projects/onap-externalapi-nbi/en/latest/index.html;Component;External API exposes ONAPs capabilities through TMF standardized interfaces. It enables ONAP to hide the internal API.;;unmaintained;
CLI;https://docs.onap.org/projects/onap-cli/en/latest/index.html;Component;The Command Line Interface (CLI) provides commands to operate ONAP during design and run-time for network service functionalities. It also provides the 'Open Command Platform' which helps to orchestrate the commands from YAML and helps in agile automation.;;maintained;
Policy Framework;https://docs.onap.org/projects/onap-policy-parent/en/latest/index.html;Component;Policy Core Functions provide a logically centralized environment for the creation and management of policies, including conditional rules (e.g. create and validate policies/rules, identify overlaps, resolve conflicts, derive additional policies as needed).;;maintained;
CLAMP;https://docs.onap.org/projects/onap-policy-clamp/en/latest/index.html;Component;The Closed Loop Automation Platform (CLAMP) provides the capability to manage runtime control loops.;;maintained;
Correlation Engine (Holmes);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#holmes-holmes-alarm-correlation-and-analysis;ComponentIndex;Holmes provides the capability to analyze the relationship among different alarms (e.g. root cause, correlation).;;maintained;
Service Orchestration (SO);https://docs.onap.org/projects/onap-so/en/latest/index.html;Component;The Service Orchestration (SO) component is in charge of orchestration of network services and resources. It is based on the use of BPMN to document the Workflows.;;maintained;
Active & Available Inventory (AAI);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#aai-active-and-available-inventory;ComponentIndex;The Active and Available Inventory (AAI) provides real-time views of the resources and services in managed by and their relationships.;;maintained;
Microservice Bus (MSB);https://docs.onap.org/projects/onap-msb-apigateway/en/latest/index.html;Component;The Microservice Bus (MSB) provides service registration, discovery and communication services for microservices as well as a gateway for internal and external communication for the services.;;maintained;
Data Movement As A Platform (DMaaP);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#dmaap-data-movement-as-a-platform;ComponentIndex;Data Movement as a Platform (DMaaP) is a component that provides data movement services that transports and processes data from any source to any target.;;maintained;
Data Collection, Analytics & Events (DCAE);https://docs.onap.org/projects/onap-dcaegen2/en/latest/index.html;Component;Data Collection, Analytics & Events (DCAE) gathers performance, usage, and configuration data from the managed environment.;;maintained;
Collectors;https://docs.onap.org/projects/onap-dcaegen2/en/latest/sections/services/serviceindex.html#collectors;Component;The collection layer provides the various data collectors that are needed to collect the instrumentation that is available from the cloud infrastructure. Included are both physical and virtual elements.;;na;
Analytics;https://docs.onap.org/projects/onap-dcaegen2/en/latest/sections/services/serviceindex.html#analytics;Component;The gathered data from multiple streams and sources is fed to analytic applications. Those applications can be real-time – for example, analytics, anomaly detection, capacity monitoring, congestion monitoring, or alarm correlation – or non-real time, such as applications that perform analytics on previously collected data or forward synthesized, aggregated or transformed data to big data stores and other applications.;;na;
Infrastructure Adaption (Multi-VIM / Cloud);https://docs.onap.org/projects/onap-multicloud-framework/en/latest/index.html;Component;MultiCloud provides mediation capabilities to connect to different infrastructure providers (VM based, Container based). It has capabilities to discover and register infrastructure resource information. Also it relays FCAPS data from infrastructure to DCAE.;"Map update? Rename to ""Infrastructure Adaption (MultiCloud)"" (like the project name)?";maintained;
Controller Design Studio (CDS);https://docs.onap.org/projects/onap-ccsdk-cds/en/latest/index.html;Component;The run-time part of the Controller Design Studio (CDS) enables operators and ISPs to implement/operate hybrid network (CNF, PNF, VNF, Whitebox, etc.). The components are able to process and execute the design-time model intent defined by the users to support the lifecycle management. Included are a Self Service API, a TOSCA Workflow Engine, a Resource & Template API, a Southbound Adapter, a Python Executor and a Kotlin Executor.;;maintained;
SDN Controller (SDNC);https://docs.onap.org/projects/onap-sdnc-oam/en/latest/index.html;Component;The ONAP Controller Family (SDNC/APPC) configures and maintains the health of Layer 1-7 network functions (VNF, PNF, CNFs) and network services throughout their lifecycle. Both provide similar services (application level configuration using NetConf, Chef, Ansible, RestConf, etc.) and life cycle management functions (e.g. stop, resume, health check). SDNC is being used mainly for Layer 1-3 network elements.;;maintained;
Application Controller (APPC);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#appc-application-controller;ComponentIndex;The ONAP Controller Family (SDNC/APPC) configures and maintains the health of Layer 1-7 network functions (VNF, PNF, CNFs) and network services throughout their lifecycle. Both provide similar services (application level configuration using NetConf, Chef, Ansible, RestConf) and life cycle management functions (e.g. stop, resume, health check, etc.). APPC is being used mainly for Layer 4-7 network functions.;;unmaintained;
Virtual Function Controller (VFC);https://docs.onap.org/projects/onap-vfc-nfvo-lcm/en/latest/index.html;Component;The Virtual Function Controller (VFC) leverages the ETSI NFV MANO Architecture and information model as a reference and implements the full life cycle management and FCAPS of VNF and NS.;;maintained;
Shared Services;https://docs.onap.org/en/latest/guides/onap-developer/architecture/onap-architecture.html#shared-services;Architecture;ONAP provides a set of operational services for all ONAP components including activity logging, reporting, common data layer, configuration, persistence, access control, secret and credential management, resiliency, and software lifecycle management.;;na;
Appl. Authoriz. Framework (AAF);https://docs.onap.org/projects/onap-aaf-authz/en/latest/index.html;Component;The Application Authorization Framework (AAF) provides the services for authentication, authorization and certificate management to the ONAP components. It provides the services to the ONAP components to manage the lifecycle of authentication and authorization elements such as permissions, roles and credentials.;;unmaintained;Original Name: AuthN/AuthZ (AAF)
Optimization Framework (OOF);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#oof-optimization-framework;ComponentIndex;The ONAP Optimization Framework (OOF) addresses the optimization needs of ONAP. OOF is a framework that supports creating and running a suite of optimizing applications including Homing/Placement, PCI optimizer, Route optimizer, Slice selection, Change Management Scheduling Optimizer.;;maintained;
Logging;https://docs.onap.org/projects/onap-logging-analytics/en/latest/index.html;Component;Logging provides the capability to capture information required to operate, troubleshoot and report on the performance of the ONAP platform.;;unmaintained;
Multi-Site State (MUSIC);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#music-onap-multi-site-integration;ComponentIndex;Multi-Site State (MUSIC) provides a multi-site state coordination/management service (MUSIC) with a rich suite of recipes that each ONAP component can simply configure and use for their state-management needs.;;unmaintained;
Config. Persistence Service (CPS);https://docs.onap.org/projects/onap-cps/en/latest/index.html;Component;The Configuration Persistence Service (CPS) provides storage for real-time run-time configuration and operational parameters that need to be used by ONAP.;;maintained;
Manage ONAP;https://docs.onap.org/en/latest/guides/onap-operator/index.html#operations-and-administration-guides;GuideOperator;Management capabilities for the Open Network Automation Platform itself.;;na;
ONAP Operations Manager (OOM);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#oom-onap-operations-manager;ComponentIndex;The ONAP Operations Manager (OOM) is responsible for lifecycle management of the ONAP platform itself. OOM provides the ability to manage cloud-native installations and deployments of ONAP to Kubernetes-managed cloud environments.;;maintained;
Utilities;https://docs.onap.org/en/latest/guides/onap-developer/architecture/onap-architecture.html#id1;Architecture;ONAP utilities provide support of the ONAP components.;;na;
ONAP Shared Utilities;https://docs.onap.org/en/latest/guides/onap-developer/architecture/onap-architecture.html#id1;Architecture;ONAP shared utilities provide support of the ONAP components.;;na;
Common Controller SDK (CCSDK);https://docs.onap.org/projects/onap-ccsdk-distribution/en/latest/index.html;Component;The Common Controller Software Development Kit (CCSDK) provides a common set of reusable code that can be used across multiple controllers. For example, the SDN-C , APP-C, DCAE, ONAP Operations Manager and ONAP controller can reuse common pieces from this framework.;;maintained;
Model Utilities;https://docs.onap.org/projects/onap-modeling-etsicatalog/en/latest/;Component;[TO BE REVISED] The unified model-driven approach uses models as sources of data for generating processes/codes and following workflows (not code development as source). This way, the system can be more flexible and future proof, easy to update and use for cross-platform solutions since the “only” thing needed is a model update and manipulation through engine.;Better description required;maintained;
TOSCA Parser;https://docs.onap.org/projects/onap-modeling-etsicatalog/en/latest/;Component;[TO BE REVISED] etsicatalog provides package management service and parser service by Micro Service. It can be used to store packages distributed by the SDC, and can be consumed by other projects or components such as UUI, VFC, etc. It also includes a TOSCA parser service.;Better description required;na;
;;;;;;
Managed Environment;;;;;;
External Systems;;;;;;
3rd Party Controllers;;;;;;
sVNFM;;;;;;
EMS;;;;;;
Network Function Layer;;;;;;
VNF;;;;"""CNF"" missing?";;
PNF;;;;;;
Hypervisor / OS Layer;;;;;;
OpenStack;;;;;;
Commercial VIM;;;;;;
Kubernetes;;;;;;
Public Cloud;;;;;;
Private Edge Cloud;;;;;;
Private DC Cloud;;;;;;
Public Cloud;;;;;;
MPLS;;;;;;
IP;;;;;;
;;;;;;
LEGEND;;;;;;
Design;;;;;;
Orchestration & Management;;;;;;
Operations;;;;;;
Entirety of ONAP Components;;;;;;
Unmaintained ONAP Component;;;;;;
;;;;;;
OBSOLETE;;;;;;
Audit (POMBA);https://docs.onap.org/projects/onap-logging-analytics/en/latest/Logging_Enhancements_Project/logging_enhancements_project.html;Component;Post Orchestration Model Based Audit (POMBA) provides a event-driven audit of the operational data integrity across the NFV orchestration environment and NFV infrastructure using model driven approach. It reports discrepancies and anomalies between model and instance artifacts.;;unmaintained;
External System Register (ESR);https://docs.onap.org/en/latest/guides/onap-developer/developing/index.html#aai-active-and-available-inventory;ComponentIndex;The External System Register (ESR) provides capabilities to manage external systems (e.g. register, test, update status in AAI).;"Check if ""unmaintained"" is correct";unmaintained;
